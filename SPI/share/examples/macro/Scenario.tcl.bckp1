#===============================================================================
# Environnement Canada
# Centre Meteorologique Canadian
# 2100 Trans-Canadienne
# Dorval, Quebec
#
# Projet   : Exemples de script.
# Fichier  : Scenario.tcl
# Creation : Fevrier 2001 - J.P.Gauthier - CMC/CMOE
#
# Description:
#    Inclure une scène 3D de la villle de Québec.
#
# Arguments  :
#
# Remarques :
#
#===============================================================================

namespace eval Macro::Scenario {} {
   variable Param
   variable Data

   set Param(In)   ""
   set Param(Info) { "Scenario" "Scenario" }
   
   set Param(Counter)    0     ;# Frame counter
   set Param(Transition) 30    ;# Number of transition frame
   set Param(Save)       False ;# Save frames
 
   set Param(ToGDPS)     ""
   set Param(ToRDPS)     SC_RDPS
   set Param(ToHRDPS)    SC_HRDPS
   set Param(ToHRDPS-BC) SC_HRDPS_BC
   set Param(ToMLDPN-ZH) SC_EYA
   set Param(ToMLDPN-CV) SC_EYA
   set Param(ToCAPS)     SC_CAPS
   set Param(ToRIOPS)    SC_RIOPS
}

proc Macro::Scenario::Execute { } {
   global GDefs env
   variable Param

   #----- Setup product
   if { $Param(Save) } { glrender -wait True }

   $Page::Data(Canvas) create rectangle 0 0 330 30 -fill white -transparency 75 -width 1 -outline black
   set SPI::Data(ShowLOGO) True
   SPI::DrawImage $Page::Data(Frame) LOGO 5 5 nw 1 0 0
   
   set Viewport::Map(Coord) 0
   set Viewport::Map(Delay) 1000.0
#   projection configure $Page::Data(Frame) -sun True -date [clock scan "21/06/2018 18:00" -timezone :UTC]
   
#   Page::Size $Page::Data(Frame)  1920 1200
#   Page::Size $Page::Data(Frame)  1920 1080
#   Page::Size $Page::Data(Frame)  1280 800
   
   font create LARGE -family arial -size -30 -weight bold
   font create MEDIUM -family arial -size -20 -weight bold
   font create LABEL  -family helvetica -size -12 -weight bold

   projection configure $Page::Data(Frame) -draw 1 -mapcoord 0 -mapriver 0 -maplake 0
   $Page::Data(Canvas) itemconfigure $Page::Data(VP) -bg #000000
   $Page::Data(Canvas) create text [expr [Page::CanvasWidth $Page::Data(Frame)]-5] [Page::CanvasHeight $Page::Data(Frame)] -font LARGE -fill #FF0000 -anchor se -tag LABEL
   $Page::Data(Canvas) create text [expr [Page::CanvasWidth $Page::Data(Frame)]-5] [Page::CanvasHeight $Page::Data(Frame)] -font LARGE -fill #FF0000 -anchor se -tag PLABEL
   $Page::Data(Canvas) create text [expr [Page::CanvasWidth $Page::Data(Frame)]-5] [expr [Page::CanvasHeight $Page::Data(Frame)]-35] -font MEDIUM -fill #FF0000 -anchor se -justify right -tag DESC
   
   Mapper::DepotWare::TMS::Load OpenStreetMap 3

   colormap create DEPTH_MAP -file $env(HOME)/.spi/Colormap/REC_Col.std1.rgba
   colormap configure DEPTH_MAP -min rgba 20  
   colormap create RIVER_MAP -file $env(HOME)/.spi/Colormap/REC_Col.std1.rgba
   colormap create CLOUD_MAP -file $env(HOME)/.spi/Colormap/OTH_EI.rgba
   colormap create WIND_MAP -file $env(HOME)/.spi/Colormap/OTH_UUonEI.rgba
   colormap create ICE_MAP -file $env(HOME)/.spi/Colormap/OTH_ICE.rgba
   
   #----- Modeling GDPS
   set plabel ""
   set pparam ""
   set pvar   ""
   set lstv   {}
   set dtran  100
   
   set labels { "GDPS (25km)" "RDPS (10km)" "HRDPS (2.5km)" "HRDPS BC (1km)" "CAPS (3km)" "RMPS-GSL (500m)" "MLDPn (25km)" "MLDPn (25km)" }
   set descs  { "Système Global de Prédiction Déterministe\nGlobal Deterministic Prediction System" 
                "Système Régional de Prédiction Déterministe\nRegional Deterministic Prediction System" 
                "Système à Haute Résolution de Prédiction Déterministe sur le Canada\nHigh Resolution Deterministic Prediction System over Canada"
                "Système à Haute Résolution de Prédiction Déterministe sur la Colombie Britanique\nHigh Resolution Deterministic Prediction System over British columbia"
                "Simulation de 48 heures du couvert de glace du Système Canadien de Prévision de l'Arctique\n48 hours ice coverage simulation from the Canadian Arctic Prediction System "
                "Simulation du couvert de glace dur Système Régional de Prévision Marine du Golfe du Saint-Laurent de janvier à Mars 2015\nIce coverage simulation fromt the Regional Marine Prediction System for the Gulf of St. Lawrence from january to march 2015"
                "Simulation de l'éruption du volcan Eyjafjallajökull ayant perturbé l'espace aérien de mars à juin 2010\nSimulation of the Eyjafjallajökull volcano eruption which affected flight from march to june 2010"
                "Simulation de l'éruption du volcan Eyjafjallajökull ayant perturbé l'espace aérien de mars à juin 2010\nSimulation of the Eyjafjallajökull volcano eruption which affected flight from march to june 2010"
   }
   set params { {{ -outline black -rendertexture 1 -colormap CLOUD_MAP  -min 70 -max 320  -mapbelow True -mapabove True } { -rendertexture 1 -colormap WIND_MAP  -min 1 -max 60 -mapbelow True -mapabove True }}
                {{ -outline black -rendertexture 1 -colormap CLOUD_MAP  -min 70 -max 320  -mapbelow True -mapabove True } { -rendertexture 1 -colormap WIND_MAP  -min 1 -max 60 -mapbelow True -mapabove True }} 
                {{ -outline black -rendertexture 1 -colormap CLOUD_MAP  -min 120 -max 250 -mapbelow True -mapabove True } { -rendertexture 1 -colormap WIND_MAP  -min 1 -max 60 -mapbelow True -mapabove True }}  
                {{ -outline black -rendertexture 1 -colormap CLOUD_MAP  -min 120 -max 250 -mapbelow True -mapabove True } { -rendertexture 1 -colormap WIND_MAP  -min 1 -max 60 -mapbelow True -mapabove True }}  
                {{ -colormap ICE_MAP -rendertexture True } { -outline black -width 2 -rendercontour 1 -renderlabel -1 -font LABEL -intervalmode INTER 5 -value INTEGER 0 }}
                {{ -colormap ICE_MAP -rendertexture True }}
                {{ -colormap RIVER_MAP -renderparticle 2 -topographyfactor 60 }} 
                {{ -colormap RIVER_MAP -rendertexture True -rendervolume True -intervals { 10 100 1000 } -transparency 50 -topographyfactor 60 }}
   }
   
#    foreach model { GDPS RDPS HRDPS HRDPS-BC CAPS RIOPS MLDPN-ZH MLDPN-CV } var { { EI UU } { EI UU } { EI UU } { EI UU } { GL PN } { GL } { ZH } { CV } } loop { 1 1 2 2 2 1 1 1 } param $params label $labels desc $descs {
#    
#       $Page::Data(Canvas) itemconfigure DESC   -text $desc
#       $Page::Data(Canvas) itemconfigure LABEL  -text $label
#       $Page::Data(Canvas) itemconfigure PLABEL -text $plabel
#       
#       fstdfile open MODEL read /fs/cetus/fs2/ops/cmoe/afsr005/Scenario/data/${model}.fstd
#       set f 0
#       for { set l 0 } { $l<$loop } { incr l } {
#          foreach date [fstdfile info MODEL DATEV [lindex $var 0]] {
#             Viewport::UnAssign $Page::Data(Frame) $Page::Data(VP) "" -1
#             foreach v $var {
#                fstdfield read FLD$v MODEL [fstdstamp fromseconds $date] "" -1 -1 -1 "" "$v"
#             }
#             
#             if { !$f } {
#                foreach v $var p $param {
#                   eval fstdfield configure FLD$v $p 
#                   set dtran [fstdfield configure FLD$v -transparency]
#                   eval fstdfield configure FLD$v -transparency 0
#                }
#                set a 100
#           
#                set ProjCam::Param(Trace) {
#                   $Page::Data(Canvas) itemconfigure LABEL -transparency  [expr 100-$a]
#                   $Page::Data(Canvas) itemconfigure DESC  -transparency  [expr 100-$a]
#                   set lstv {}
#                   foreach v $var {
#                      fstdfield configure FLD$v -transparency [expr max(100-$a,$dtran)]
#                      lappend lstv FLD$v
#                   }
#                   foreach v $pvar p $pparam {
#                      if { [fstdfield is PFLD$v] } {
#                         eval fstdfield configure PFLD$v $p -transparency [set a [expr $a<=0?0:($a-2)]]
#                         lappend lstv PFLD$v
#                      }
#                   }
#                   $Page::Data(Canvas) itemconfigure PLABEL -transparency $a
#                   Viewport::Assign $Page::Data(Frame) $Page::Data(VP) $lstv -1
#                   Macro::Scenario::Print
#                }
#                ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) $Param(To$model)
#             } else {
#                $Page::Data(Canvas) itemconfigure PLABEL -transparency 0
#                $Page::Data(Canvas) itemconfigure LABEL  -transparency 100
#                $Page::Data(Canvas) itemconfigure DESC   -transparency  [expr 100-($f-20)*5]
#                set lstv {}
#                foreach v $var p $param {
#                   eval fstdfield configure FLD$v $p -transparency $dtran
#                   lappend lstv FLD$v
#                }
#             }
#    #         if { $model=="GDPS" } {
#    #            set Viewport::Map(Lon) [expr fmod($Viewport::Map(Lon)+3,360)]
#    #            Viewport::Rotate $Page::Data(Frame) $Viewport::Map(Lat) $Viewport::Map(Lon)
#    #         }
#             Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) $lstv
#             $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
#             update idletasks
#             Macro::Scenario::Print
#             incr f
#          }
#       }
#       foreach v $var {
#          fstdfield copy PFLD$v FLD$v 
#       }
#       set plabel $label
#       set pparam $param
#       set pvar   $var
#       fstdfile close MODEL
# 
#       Macro::Scenario::Pause
#    } 
# 
    set ProjCam::Param(Trace) {
       Macro::Scenario::Print
    }

#    #----- Env modelling 
#    ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_RIVER
#    Viewport::UnAssign $Page::Data(Frame) $Page::Data(VP)
#    
#    #----- Topo
#    set bands [gdalfile open TOPOFILE read /home/binops/afse/eer/links/geo/Bathymetry/GEBCO_2014/GEBCO_2014_1D.nc]
#    gdalband read TOPO $bands
#     
#    set map [gdalband configure TOPO -colormap]
#    colormap configure $map -min rgba -450 -max rgba 1620 
#    gdalband configure TOPO -transparency 0
#    Macro::Scenario::Appears TOPOL gdalband
#    Macro::Scenario::Pause
# 
#    #----- Soil
#    set bands [gdalfile open SOILFILE read /home/binops/afse/eer/links/geo/Common/ESA_CCI_LC/2010/ESACCI-LC-L4-LCCS-Map-300m-P5Y-2010-v1.6.1.tif]
#    gdalband read SOIL $bands False
#    gdalband configure SOIL -transparency 0
#      
#    Macro::Scenario::Appears SOIL gdalband
#    Macro::Scenario::Pause
#    
#    #----- Rivers
#    fstdfile open RIVERFILE read /home/binops/afsi/par/.suites/gls/watroute/hub/castor/gridpt/prog/hydrol/2017090706_024_gls
#    fstdfield read RIVER RIVERFILE -1 "" -1 -1 -1 "" "DISC"
#    fstdfield configure RIVER -colormap RIVER_MAP -transparency 0 -outline black -rendertexture 1 -intervals { 0.05 1 10 100 200 500 1000 } 
#
#    Macro::Scenario::Appears RIVER   
#    Macro::Scenario::Pause
# 
#    for { set a 90 } { $a >=0 } { incr a -5 } {
#       gdalband configure TOPO -transparency [expr 90-$a]
#       gdalband configure SOIL -transparency [expr 90-$a]
#       fstdfield configure RIVER -transparency [expr 90-$a]
#       $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
#       update idletasks
#       Macro::Scenario::Print
#    }
#    
#    Viewport::UnAssign $Page::Data(Frame) $Page::Data(VP) { TOPO SOIL RIVER }
#    gdalband free SOIL TOPO
#    fstdfield free RIVER
#      
#    #----- Urban 3D   
#    ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_MTL
#    projection configure $Page::Data(Frame) -draw 0
# 
#    set layers [ogrfile open MTLFILE read /home/binops/afse/eer/links/geo/Vector/Cities/Montreal/bat_2d_st.shp]
#    eval ogrlayer read MTL [lindex $layers 0]
#    ogrlayer configure MTL -outline #000000 -fill #AAAAAA -width 1 
#    Viewport::Assign $Page::Data(Frame) $Page::Data(VP) MTL
#    for { set a 0 } { $a <= 1.0} { set a [expr $a+0.05] } {
#        ogrlayer configure MTL -extrude HAUTEUR -extrudefactor $a
#        $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
#        update idletasks
#        Macro::Scenario::Print
#    }
#     
#    Macro::Scenario::Pause
  
   #----- Urban 3D   
   glrender -zbuffer True
   ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_TOR_Z
   Macro::Scenario::Appears "" "" "CUDM (5m)" "Dispersion en milieu urbain sur Toronto du Système de Modélisation Urbain Canadien\nUrban modeling dispersion in Toronto fromt the Canadian Urban Dispersion Modeling System"
   projection configure $Page::Data(Frame) -draw 0

   set layers [ogrfile open TORFILE read /home/binops/afse/eer/links/geo/Vector/Cities/Toronto/Toronto_DT_2013_mtm3degree_v2.shp]
   eval ogrlayer read TOR [lindex $layers 0]
   ogrlayer configure TOR -outline #000000 -fill #AAAAAA -width 1 
   Viewport::Assign $Page::Data(Frame) $Page::Data(VP) TOR
   for { set a 0 } { $a <= 1.0} { set a [expr $a+0.05] } {
       ogrlayer configure TOR -extrude EleZ -extrudefactor $a
       $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
       update idletasks
       Macro::Scenario::Print
   }
   
   ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_TOR_TOP
   
   #----- Urban Model   
   fstdfile open MODEL read /users/dor/afsr/005/links/storage/Projects/UrbanX/Toronto/flow.fstd
   fstdfield read UV MODEL -1 "" -1 -1 -1 "" "U"
   fstdfield configure UV -colormap RIVER_MAP -transparency 0 -rendervector ARROW -sample 1 -color black -mapall True -min 0 -max 2 -mapabove True
   Macro::Scenario::Appears UV fstdfield
   fstdfile close MODEL

   Macro::Scenario::Pause 10
   
   fstdfile open MODEL read /users/dor/afsr/005/links/storage/Projects/UrbanX/Toronto/ppxy.fstd
   foreach date [fstdfile info MODEL DATEV ZH] {
      fstdfield read ZH MODEL [fstdstamp fromseconds $date] "" -1 -1 -1 "" "ZH"
      fstdfield configure ZH -colormap RIVER_MAP -renderparticle 3 -color black -min 0 -max 300
      Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) { ZH }
      $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
      update idletasks
      Macro::Scenario::Print
   }
    
   Macro::Scenario::Pause 10
      
   ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_TOR_ZH
   Macro::Scenario::Disappears { UV ZH } fstdfield "" "Dispersion en milieu urbain sur Toronto du Système de Modélisation Urbain Canadien\nUrban modeling dispersion in Toronto fromt the Canadian Urban Dispersion Modeling System"
   
   foreach date [fstdfile info MODEL DATEV ZH] {
      fstdfield read ZH MODEL [fstdstamp fromseconds $date] "" -1 -1 -1 "" "ZH"
      fstdfield configure ZH -colormap RIVER_MAP -transparency 100 -renderparticle 3 -color black -min 0 -max 300
      Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) { ZH }
      $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
      update idletasks
      Macro::Scenario::Print
   }
   fstdfile close MODEL

   Macro::Scenario::Pause

   Macro::Scenario::Disappears ZH
      
   fstdfile open MODEL read /users/dor/afsr/005/links/storage/Projects/UrbanX/Toronto/concgrid.fstd
   fstdfield read CV MODEL -1 "" -1 -1 -1 "" "CV"
   fstdfield configure CV -colormap RIVER_MAP -rendertexture True -rendervolume True -intervals { 1e-8 1e-7 1e-6 } -transparency 60
   Macro::Scenario::Appears CV
   fstdfile close MODEL

   Macro::Scenario::Pause

   Viewport::UnAssign  $Page::Data(Frame) $Page::Data(VP) { CV }
   $Page::Data(Canvas) itemconfigure DESC -text ""
  fstdfield free UV ZH CV
      
#    #----- Hydro
#    ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_H2D2
#       
#    #----- Modeling
#    fstdfield vector { WVX WVY }
#    fstdfile open H2D2 read /users/dor/afsr/005/links/devfs/Projects/SPILL/WasteWater/H2D2.fst.M
#    fstdfield read DEPTH H2D2 -1 "" -1 -1 -1 "" "HB"
#    fstdfield read CURRENT H2D2 -1 "" -1 -1 -1 "" "WVX"
#    fstdfield configure DEPTH -colormap DEPTH_MAP -transparency 0 -topography HB -outline black -rendertexture 1 -topographyfactor -10 
#    fstdfield configure CURRENT -colormap DEPTH_MAP -transparency 0 -outline black -mapall True -rendervector ARROW -sample 2 -size 15 -sizerange 1 
#    Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) { DEPTH CURRENT }
#    for { set a 0 } { $a <= 100 } { incr a 5 } {
#       fstdfield configure CURRENT -transparency $a
#       $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
#       update idletasks
#       Macro::Scenario::Print
#    }
#    
#    Macro::Scenario::Pause
# 
#    Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) DEPTH
#    for { set a 0 } { $a <= 100 } { incr a 5 } {
#       fstdfield configure CURRENT -transparency [expr 100-$a]
#       fstdfield configure DEPTH -transparency $a
#       $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
#       update idletasks
#       Macro::Scenario::Print
#    }

   #----- Modeling
   glrender -zbuffer False
   ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_SPILL_VC_HARBOUR
   Macro::Scenario::Appears "" "" "COSMoS (5m)" "Simulations de dispersion de nappes d'huiles à Vancouver de la suite de Modélisation de Déversement d'Huile du Canada\nOil spill dispersion simulations in Vancouver from the Canadian Oil Spill Modelling Suite"

   fstdfile open MODEL read /fs/cetus/fs2/ops/cmoe/afsr005/Scenario/data/SPILL_VC_HARBOUR.fstd
   foreach date [fstdfile info MODEL DATEV ZH] {
      fstdfield read ZH MODEL [fstdstamp fromseconds $date] "" -1 -1 -1 "" "ZH"
      fstdfield configure ZH -outline black -rendergrid 3
      Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) { ZH }
      $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
      update idletasks
      Macro::Scenario::Print
   }
   fstdfile close MODEL
  
   Macro::Scenario::Pause
   ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_SPILL_VC_FRASER

   fstdfile open MODEL read /fs/cetus/fs2/ops/cmoe/afsr005/Scenario/data/SPILL_VC_FRASER.fstd
   foreach date [fstdfile info MODEL DATEV ZH] {
      fstdfield read ZH MODEL [fstdstamp fromseconds $date] "" -1 -1 -1 "" "ZH"
      fstdfield configure ZH -outline black -rendergrid 3
      Viewport::Assign  $Page::Data(Frame) $Page::Data(VP) { ZH }
      $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
      update idletasks
      Macro::Scenario::Print
   }
   Viewport::UnAssign  $Page::Data(Frame) $Page::Data(VP) { ZH }
   fstdfield free ZH
   fstdfile close MODEL

   #----- Modeling
   Macro::Scenario::Pause
   ProjCam::Select $Page::Data(Frame) $Page::Data(Frame) SC_GDPS
}

proc Macro::Scenario::Print { } {
   variable Param

   if { $Param(Save) } { 
      PrintBox::Save $Page::Data(Frame) 0 0  [Page::CanvasWidth $Page::Data(Frame)] [Page::CanvasHeight $Page::Data(Frame)] /fs/cetus/fs2/ops/cmoe/afsr005/Scenario/img[format %05i [incr Param(Counter)]] jpg
   } else {
#      after 50
   }
}

proc Macro::Scenario::Pause { { Delay 0 } } {
   variable Param
   
   set Delay [expr $Delay?$Delay:$Param(Transition)]
   
   for { set f 0 } { $f <= $Delay } { incr f } { 
      Macro::Scenario::Print
   }

}

proc Macro::Scenario::Appears { Ids { Type fstdfield } { Label "" } { Desc "" } } {

   Viewport::Assign $Page::Data(Frame) $Page::Data(VP) $Ids
   for { set a 0 } { $a<90 } { incr a 5 } {
      foreach id $Ids {
         eval $Type configure $id -transparency $a
      }
      if { $Label!="" } {
         $Page::Data(Canvas) itemconfigure LABEL -text $Label -transparency $a
      }
      if { $Desc!="" } {
         $Page::Data(Canvas) itemconfigure DESC -text $Desc -transparency $a
      }
      $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
      update idletasks
      Macro::Scenario::Print
   }
}

proc Macro::Scenario::Disappears { Ids { Type fstdfield } { Label "" } { Desc "" } } {

   for { set a 95 } { $a >0 } { incr a -5 } {
      foreach id $Ids {
         eval $Type configure $id -transparency $a
      }
      if { $Label!="" } {
         $Page::Data(Canvas) itemconfigure LABEL -text $Label -transparency $a
      }
      if { $Desc!="" } {
         $Page::Data(Canvas) itemconfigure DESC -text $Desc -transparency $a
      }
      $Page::Data(Canvas) itemconf $Page::Data(VP) -update True
      update idletasks
      Macro::Scenario::Print
   }
   Viewport::UnAssign  $Page::Data(Frame) $Page::Data(VP) $Ids
}

proc Macro::Scenario::Clean { } {

}

proc Macro::Scenario::Args { } {
   global argv argc
   variable Param

   if { $argc } {
      set Param(Save)  [lindex $argv 0]
   }
}
