#!/bin/bash
#----- On version change:
#-----    Change version in TclGeoEER/configure.in
#-----    Check for new versions of dict and bufr in $CMCCONST
. ./VERSION

NAME="SPI"
DESCRIPTION="Meteorological GIS, Processing and Modeling tool"
SUMMARY="4D virtual globe for scientific visualisation and analytics (https:\/\/gitlab.science.gc.ca\/ECCC_CMOE_APPS\/eerspi)"
MAINTAINER="Jean-Philippe.Gauthier@canada.ca"
export VERSION=$SPI_VERSION

HELP="Arguments must be:\n\n   Information parameters:
\t-help        : This information
\t-version     : Version

   Commands:
\t-clear       : Clear package
\t-ssm         : Build SSM package\n"

CLR=0
BLD=0
SSM=0
INS=0

#----- Get arguments
while [ $# -gt 0 ]; do
    case "$1" in
        -clear)   CLR=1;;
        -ssm)     SSM=1;;

        -h|-help)    printf -- "$HELP\n"; exit 0;;
        -v|-version) printf -- "$VERSION\n"; exit 0;;
        --)          shift; break;;
        *)           printf -- "Invalid argument $1.\n\n$HELP"; exit 1;;
    esac
    shift
done

printf -- "\n----- Building platform : all -----\n"

if [[ $SSM -eq 1 ]]; then
   SSM_NAME=${NAME}_${VERSION}_all

   printf -- "\n----- Building ssm package : ${SSM_DEV}/workspace/${SSM_NAME} -----\n"

   rm -f -r ${SSM_DEV}/workspace/${SSM_NAME} ${SSM_DEV}/package/${SSM_NAME}.ssm 
   mkdir -p ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d ${SSM_DEV}/workspace/${SSM_NAME}/etc/profile.d ${SSM_DEV}/workspace/${SSM_NAME}/lib
   cp -r  bin tcl share data VERSION .profile_spi tclsh tclshd wish ${SSM_DEV}/workspace/${SSM_NAME}
   cp .ssm.d/post-install ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d
   find ${SSM_DEV}/workspace/${SSM_NAME} -name .svn -prune -exec rm -f -r {} \;
   find ${SSM_DEV}/workspace/${SSM_NAME} \( -name "*~" -o -name ".*.sw?" -o -name ".nfs*" \) -delete
echo "{
   \"name\": \"${NAME}\",
   \"version\": \"${VERSION}\",
   \"platform\": \"all\",
   \"maintainer\": \"${MAINTAINER}\",
   \"summary\": \"${SUMMARY}\",
   \"description\": \"${DESCRIPTION}\",
   \"requires\": \"\",
   \"x-buildinfo\": \"`[ -z "\${ORDENV_SETUP}" ] || git describe --always`\"
}" > ${SSM_DEV}/workspace/${SSM_NAME}/.ssm.d/control.json
   cd ${SSM_DEV}/workspace; tar -zcvf ${SSM_DEV}/package/${SSM_NAME}.ssm ${SSM_NAME}
fi
