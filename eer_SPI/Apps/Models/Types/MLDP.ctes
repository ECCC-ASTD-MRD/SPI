#============================================================================
# Environnement Canada - Service meteorologique du Canada
# Centre meteorologique canadien
# 2121 Route Trans-canadienne
# Dorval, Quebec
# H9P 1J3
#
# Projet     : Interface pour la gestion des experiences.
# Fichier    : <MLDP0.ctes>
# Creation   : Octobre 1999 - J.P. Gauthier - CMC/CMOE
#
# Description: Description des constantes relatives au module MLDP0.
#
# Remarques  :
#
#============================================================================

namespace eval MLDP0 { }
namespace eval MLDP1 { }
namespace eval MLDP {
   global GDefs env
   variable Sim
   variable Tmp

   #----- Definition des constantes generale aux simulations

   set Sim(DBaseDiag)     ""                          ; #----- Directory path of diagnostics met files.
   set Sim(DBaseProg)     ""                          ; #----- Directory path of prognostics met files.
   set Sim(Path)          ""                          ; #----- Simulation directory.

   set Sim(ListMeteoDelta)      { 1 3 6 }                                    ; #----- List of time interval for meteorological data files [hr].
   set Sim(ListSimDuration)     { 6 12 18 24 48 72 96 120 144 168 }          ; #----- List of simulation durations [hr].
   set Sim(ListOutputTimeStep)  { 5 10 15 20 30 60 120 180 360 }             ; #----- List of output time step [min].
   set Sim(ListModelTimeStep)   { 1 2 5 10 15 20 30 60 }                     ; #----- List of internal model time step [min].
   set Sim(ListEmHeightMode)    { { "Calcul selon une masse d'explosif" } \
                                  { "Calculation based on explosive mass" } } ; #----- List of mode for plume height calculation.
   set Sim(ListEmMassMode)      { { "Formule empirique de Sparks et al. (1997)" "Formule empirique de Mastin et al. (2009)" "Édition" } \
                                  { "Empirical formula of Sparks et al. (1997)" "Empirical formula of Mastin et al. (2009)" "Edit" } } ; #----- List of mode for total mass released calculation.
   set Sim(ListEmSizeDist)      { { "Spurr Septembre 1992" "Spurr Août 1992" "Redoubt 1989-1990" "NAME (VAAC Londres, UK Met Office)" "Fine" "Aucune" } \
                                  { "Spurr September 1992" "Spurr August 1992" "Redoubt 1989-1990" "NAME (London VAAC, UK Met Office)" "Fine" "No" } }   ; #----- List of size distributions of particles (for volcano source type).
   set Sim(ListEmVerticalDist)  { { "Uniforme" "Champignon" "Exponentielle" "Poisson" "Conique" } \
                                  { "Uniform" "Umbrella" "Exponential" "Poisson" "Conical" } }   ; #----- List of vertical plume distributions.
   set Sim(ListEmissionLabel)   { { "Relâchement" "Accalmie" "" } \
                                  { "Release" "Lull" "" } }                  ; #----- List of release labels (for volcano source type).
   set Sim(ListEmissionValue)   { 1 0 -1 }                                   ; #----- List of release values.
   set Sim(ListVirusName)       { { "Fièvre aphteuse" } \
                                  { "Foot-and-Mouth Disease" } }             ; #----- List of virus names.
#   set Sim(ListVirusName)       { { "Fièvre aphteuse" "Grippe aviaire" } \
#                                  { "Foot-and-Mouth Disease" "Avian Influenza" } }
   set Sim(ListVirusType)       { "fmd" "avian" }                            ; #----- List of types of virus.
   set Sim(ListVirusSymbol)     { "FMD-VIRUS" "AVIAN-VIRUS" }                ; #----- List of virus symbols.
   set Sim(NotAvailable)        { "N/D" "N/A" }                              ; #----- Not available.

   #----- List of horizontal wind velocity variance for mesoscale fluctuations [m2/s2].
   set Sim(ListVarMesoscale)    { 0.00 0.01 0.10 0.50 1.00 2.00 3.00 5.00 }
   #----- List of Lagrangian timescale for mesoscale fluctuations [s].
   set Sim(ListTimescale)       { 1800 2700 3600 10800 21600 }
   #----- List of reflection levels [hyb|eta|sig].
   set Sim(ListReflectionLevel) { 0.9990 0.9995 0.9996 0.9997 0.9998 0.9999 1.0000 }

   set Sim(OutMode)              cmc                           ; #----- Output mode [cmc | argos | all].
   set Sim(LogLevel)             low                           ; #----- Printing debugging level [low | moderate | high].
   set Sim(Seed)                 variable                      ; #----- Initial seed for random number generator [fixed | variable].
   set Sim(DtOverTl)             1.0                           ; #----- Ratio of diffusion time step over Lagrangian time scale [dimensionless].
   set Sim(DtMin)                1.0                           ; #----- Diffusion time step minimum value [s].
   set Sim(IsIncludeHorizDiff)   ".TRUE."                      ; #----- Flag indicating if including horizontal diffusion in free atmosphere.
   set Sim(IsIncludeSUV)         ".FALSE."                     ; #----- Flag indicating if including horizontal wind speed variances in diffusion calculations.
   set Sim(NbMPItasks)           1                             ; #----- Number of MPI tasks.
   set Sim(OMPthreadFact)        1                             ; #----- Integer multiplicative factor to apply to number of OpenMP threads [1|2].
   set Sim(NbOMPthreads)         1
   set Sim(ListNbMPItasks)       { 1 }
   set Sim(ListNbOMPthreads)     { 1 }
   set Sim(ListOMPthreadFact)    { 1 }
   set Sim(RunningTimeCPU)       28800                         ; #----- CPU running time for the job to end [s].

   set Sim(MaxNbSrc)             20                            ; #----- Maximum number of sources.
   set Sim(EmMaxIso)             5                             ; #----- Maximum number of isotopes.
   set Sim(EmMaxInterval)        10                            ; #----- Maximum number of emission intervals.
   set Sim(EmDir)                "$env(HOME)/.spi/Scenario"    ; #----- Directory containing emission scenario files.
   set Sim(EmEpsilon)            1.0e-05                       ; #----- Small value.

   #----- Add front-end machine to list of available hosts.
   set Sim(Hosts) $GDefs(FrontEnds)
   if { [lsearch -exact $Sim(Hosts) $GDefs(Host)]==-1 } {
      lappend Sim(Hosts) $GDefs(Host)
   }

   #----- Add back-end machines to list of hosts.
   set Sim(Hosts) [concat $GDefs(BackEnds) $Sim(Hosts)]
}
