#!/bin/sh
# SH stuff \
DIR=$0
# SH stuff \
DIR=${DIR%Setup}../
# Let's start up with the proper wish \
exec $DIR/wish "$0" "$@"

proc InstallPath { Var Path } {
   global GDefs

   if { $Path!= "" } {
      set $Var $Path
   }
}

#-------------------------------------------------------------------------------
# Nom      : <GetPrevious>
# Creation : Aout 2001 - J.P. Gauthier - CMC/CMOE
#
# But      : Lire les definitions precedentes.
#
# Parametres :
#
# Remarques :
#
# Modifications :
#
#    Nom         : -
#    Date        : -
#    Description : -
#
#-------------------------------------------------------------------------------

proc GetPrevious { } {
   global GDefs
   global env
   global tcl_platform

   if { ![file exists $env(HOME)/.spi] } {
      if { [file exists $env(HOME)/.eer_ToolDefs] } {
         set GDefs(Copy) True
      }
      file mkdir $env(HOME)/.spi
   }

   if { [file exists $env(HOME)/.eer_ToolDefs] } {
      if { [set file [lindex [lsort -dictionary -increasing [glob -nocomplain $env(HOME)/.eer_ToolDefs/.eer_Defs-*]] end]]!="" } {
         source $file
      }
   }
   if { [set file [lindex [lsort -dictionary -increasing [glob -nocomplain $env(HOME)/.spi/.spi-*]] end]]!="" } {
      source $file
   }

   if { $GDefs(Lang) } {
      set GDefs(Langue) English
   } else {
      set GDefs(Langue) Francais
   }
}

#-------------------------------------------------------------------------------
# Nom      : <InstallWindow>
# Creation : Aout 2001 - J.P. Gauthier - CMC/CMOE
#
# But      : Creer la fenetre principale d'installation.
#
# Parametres :
#
# Remarques :
#
# Modifications :
#
#    Nom         : -
#    Date        : -
#    Description : -
#
#-------------------------------------------------------------------------------

proc InstallWindow { } {
   global GDefs

   wm title     . "EBox Installer ($GDefs(Ver))"
   wm geometry  . 300x170
   wm resizable . 0 0

   TabFrame::Create .tab 1 ""
   pack .tab -side top -fill both -expand true -padx 5 -pady 5

   WidgetOther [TabFrame::Add .tab 1 Options False]
   WidgetPath  [TabFrame::Add .tab 1 Modeles False]

   frame .cmd
      button .cmd.install -text Install -bd 1 -highlightthickness 0 \
         -command "InstallOutput; destroy ."
      button .cmd.cancel -text Cancel -bd 1 -highlightthickness 0 \
         -command "destroy ."
      pack .cmd.install .cmd.cancel -side left -fill x -expand true
   pack .cmd -side top -fill x -padx 5 -pady 5

   TabFrame::Select .tab 0
}

#-------------------------------------------------------------------------------
# Nom      : <WidgetPath>
# Creation : Aout 2001 - J.P. Gauthier - CMC/CMOE
#
# But      : Creer l'onglet des repertoires.
#
# Parametres :
#
# Remarques :
#
# Modifications :
#
#    Nom         : -
#    Date        : -
#    Description : -
#
#-------------------------------------------------------------------------------

proc WidgetPath { Frame } {
   global GDefs
   global Lbl

   frame $Frame.loc
      label $Frame.loc.lbl -text Experiments -width 8 -anchor w
      entry $Frame.loc.ent -textvariable GDefs(DirData) -width 25 -bd 1 -highlightthickness 0 -bg $GDefs(ColorLight)
      button $Frame.loc.but -bitmap @$GDefs(Dir)/Resources/Bitmap/directory.ico -bd 1 -highlightthickness 0 -relief groove -bd 2\
         -command { InstallPath GDefs(DirData) [FileBox::Create . $GDefs(DirData) Path ""] }
      pack $Frame.loc.lbl $Frame.loc.ent $Frame.loc.but -side left -fill y
   pack $Frame.loc -side top -padx 5 -pady 5 -anchor w

   frame $Frame.host
      label $Frame.host.lbl -text BackEnd -width 8 -anchor w
      entry $Frame.host.ent -textvariable GDefs(BackEndsaiph) -width 25 -bd 1 -highlightthickness 0 -bg $GDefs(ColorLight)
      pack $Frame.host.lbl $Frame.host.ent -side left
   pack $Frame.host -side top -padx 5 -anchor w

   WidgetEnable $Frame
}

#-------------------------------------------------------------------------------
# Nom      : <WidgetOther>
# Creation : Aout 2001 - J.P. Gauthier - CMC/CMOE
#
# But      : Creer l'onglet des autres parametres.
#
# Parametres :
#
# Remarques :
#
# Modifications :
#
#    Nom         : -
#    Date        : -
#    Description : -
#
#-------------------------------------------------------------------------------

proc WidgetOther { Frame } {
   global GDefs

   frame $Frame.deb
      label $Frame.deb.lbl -text "Sortie de la trace" -width 22 -anchor w
      ComboBox::Create $Frame.deb.out GDefs(DebugOutput) noedit sorted nodouble -1 \
          "stderr stdout" 6 5 ""
      ComboBox::Create $Frame.deb.lvl GDefs(DebugLevel) noedit sorted nodouble -1 \
          "0 1 2" 2 5 ""
      pack $Frame.deb.lbl $Frame.deb.out $Frame.deb.lvl -side left
   pack $Frame.deb -pady 10 -side top

   frame $Frame.lan
      label $Frame.lan.lbl -text "Language" -width 22 -anchor w
      ComboBox::Create $Frame.lan.ent GDefs(Langue) noedit sorted nodouble -1 \
          "Francais English" 10 5 ""
      pack $Frame.lan.lbl $Frame.lan.ent -side left
   pack $Frame.lan -side top
}

#-------------------------------------------------------------------------------
# Nom      : <InstallOutput>
# Creation : Aout 2001 - J.P. Gauthier - CMC/CMOE
#
# But      : Creer le fichiers de parametres.
#
# Parametres :
#
# Remarques :
#
# Modifications :
#
#    Nom         : -
#    Date        : -
#    Description : -
#
#-------------------------------------------------------------------------------

proc InstallOutput { } {
   global env
   global GDefs

   #----- Determiner la langue
   switch $GDefs(Langue) {
      Francais { set GDefs(Lang) 0 }
      English  { set GDefs(Lang) 1 }
   }

   #----- Creer le fichier d'initialisations
   set f [open $env(HOME)/.spi/$GDefs(DefFile) w+]

   puts $f "
#==============================================================================
# Environnement Canada
# Centre Meteorologique Canadien
# Dorval, Quebec
#
# Projet     : Interface de gestion des urgences.
# Nom        : <$GDefs(DefFile)>
# Creation   : Novembre 2002 - J.P. Gauthier - CMC/CMOE
#
# Description:
#
#    Definitions des divers repertoires et constantes relatives aux package
#    d'outils des urgences
#
# Remarques  :
#   Aucune.
#
# Modifications :
#
#   Nom         : -
#   Date        : -
#   Description : -
#
#=================================================================================

#----- Repertoire Generaux relatif a toutes les applications

set env(GDB_PATH)         SED_GEOPATH

set GDefs(Arch)           \$tcl_platform(os)
set GDefs(Host)           \[lindex \[split \[info hostname\] .\] 0\]
set GDefs(Ext)            \[info sharedlibextension\]

set GDefs(Lang)           $GDefs(Lang)

#----- Repertoires des experiences

set GDefs(DirEER)         \$env(HOME)/.spi
set GDefs(DirWatch)       \"$GDefs(DirWatch)\"
set GDefs(DirData)        \"$GDefs(DirData)\"
set GDefs(DirObs)         \"/data/ade\"
set GDefs(DirCFSArch)     \"$GDefs(DirCFSArch)\"

#----- Repertoires plus specifiques

set GDefs(DirMsg)         \"$GDefs(DirMsg)\"
set GDefs(DBMet)           $GDefs(DBMet)

#----- Definitions pour les Frontends / Backends

set GDefs(FrontEnd)       $GDefs(FrontEnd)
set GDefs(FrontEndUser)   $GDefs(FrontEndUser)
set GDefs(TransmitUser)   $GDefs(TransmitUser)

set GDefs(FrontEnds)        { $GDefs(FrontEnds) }
set GDefs(BackEnds)         { $GDefs(BackEnds) }
set GDefs(BackEndmaia)      { $GDefs(BackEndmaia) }
set GDefs(BackEndsaiph)     { $GDefs(BackEndsaiph) }
set GDefs(BackEndzeta)      { $GDefs(BackEndzeta) }

#----- NVidia Antialiasing

set env(__GL_FSAA_MODE) 1 ;#2x Bilenear Multisampling
set env(__GL_FSAA_MODE) 2 ;#2x Quincunx Multisampling
set env(__GL_FSAA_MODE) 4 ;#2x2 SuperSampling (Best for Quadro2 Pro)
set env(__GL_FSAA_MODE) 5 ;#4x Gaussian Multisampling (Best for QuadroFX)
"
   close $f

   file mkdir $env(HOME)/.spi/Trace
   file mkdir $env(HOME)/.spi/Tmp
   file mkdir $env(HOME)/.spi/Layout
   file mkdir $env(HOME)/.spi/Colormap
   file mkdir $env(HOME)/.spi/Scenario
   file mkdir $env(HOME)/.spi/Macro

   #----- Installer les fichiers de definitions
   foreach file { SPI } {
      Log::Print INFO "Copying setup file : $file"
      file copy -force $GDefs(Dir)/Setup/Data/$file $env(HOME)/.spi/$file
   }

   foreach file { Colormap Scenario } {
      Log::Print INFO "Copying setup file : $file"
      exec cp -r $GDefs(Dir)/Setup/Data/$file $env(HOME)/.spi
   }

   #----- Copy old users definitions
   if { $GDefs(Copy) } {
      foreach fileold { eer_FieldCalc eer_FileBoxPath eer_Host eer_ObsModel eer_ProjCam eer_SatDomain eer_Default } filenew { FieldCalc FileBox HFManager ObsModel ProjCam SatData SPI } {
         catch { file copy $env(HOME)/.eer_ToolDefs/$fileold $env(HOME)/.spi/$filenew }
      }
      foreach fileold { eer_Layout eer_Scenario Macro } filenew { Layout Scenario Macro } {
         eval exec cp -r [glob $env(HOME)/.eer_ToolDefs/${fileold}/*] $env(HOME)/.spi/${filenew}
      }

      catch { file copy $env(HOME)/.eer_ToolDefs/Mapper/Params $env(HOME)/.spi/Mapper }
   }
   Log::Print INFO "Installation done"
}

#----- Initialize environnement
set GDefs(Ver)           [regsub \[:alpha:\]+ [lindex [split [lindex [split [file dirname [file normalize [info script]]] /] end-1] -] end] ""]
set GDefs(DefFile)       .spi-$GDefs(Ver)
set GDefs(Copy)          False
set GDefs(FrontEnd)      alef
set GDefs(FrontEndUser)  $env(USER)
set GDefs(TransmitUser)  afsiops

set GDefs(FrontEnds)        { alef dorval-ib }
set GDefs(BackEnds)         { saiph zeta maia }
set GDefs(BackEndmaia)      { { development } /home/binops/afse/eer /fs/ops/eer/afsr005 }
set GDefs(BackEndsaiph)     { { development } /home/binops/afse/eer /fs/ops/eer/afsr005 }
set GDefs(BackEndzeta)      { { development } /home/binops/afse/eer /fs/ops/eer/afsr005 }

set GDefs(DirData)        ""
set GDefs(DirCFSArch)     ""
set GDefs(DirMsg)         ""
set GDefs(DirWatch)       ""
set GDefs(Lang)           0

#----- Setup parameters
GetPrevious

#----- Set default values
set GDefs(Arch)  [exec uname -s]
set GDefs(Dir)   [file dirname [info script]]/..
set GDefs(DBMet) /data/gridpt/dbase

#----- Include needed packages
package require Icons
package require TabFrame
package require ComboBox
package require Dialog
package require FileBox
package require Logger

#----- Crank it up
InstallWindow
